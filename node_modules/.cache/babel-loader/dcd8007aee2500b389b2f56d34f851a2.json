{"ast":null,"code":"var _jsxFileName = \"/Users/brennanpollock/Desktop/flashcard-project/Project_Flashcards_Qualified_1/src/components/Study.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { readDeck } from \"../utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Study() {\n  _s();\n\n  const [cards, setCards] = useState({});\n  const [deck, setDeck] = useState({});\n  const [front, setFront] = useState(true);\n  const [cardIndex, setCardIndex] = useState(0);\n  const {\n    deckId\n  } = useParams();\n  const history = useHistory(); // effect for reading deck by deckId\n\n  useEffect(() => {\n    setCards({});\n\n    async function loadData() {\n      try {\n        const data = await readDeck(deckId);\n        setDeck(data);\n        setCards(data.cards);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    loadData();\n  }, [deckId]);\n\n  function flip() {\n    setFront(!front);\n  }\n\n  function next() {\n    if (cardIndex + 1 < cards.length) {\n      setCardIndex(cardIndex + 1);\n      setFront(true);\n    } else {\n      const result = window.confirm(`Restart cards? Click 'cancel' to return to home page.`);\n\n      if (result) {\n        setCardIndex(0);\n        setFront(true);\n      } else {\n        history.push(\"/\");\n      }\n    }\n  }\n\n  if (cards.length > 2) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Study: \", deck.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"card-title\",\n            children: [\"Card \", cardIndex + 1, \" of \", cards.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: front ? `${cards[cardIndex].front}` : `${cards[cardIndex].back}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: flip,\n            children: \"Flip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), front ? null : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: next,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Study: \", deck.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"card-title\",\n            children: \"Not Enough Cards\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: [\"You need at least 3 cards to study. There are \", cards.length, \" cards in this deck. \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/decks/${deckId}/cards/new`,\n            className: \"btm btn-primary\",\n            children: \"Add Cards\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n} // end of study component\n\n\n_s(Study, \"qQN47BztYy5TQD+IEPyIJHYIz2E=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = Study;\nexport default Study;\n\nvar _c;\n\n$RefreshReg$(_c, \"Study\");","map":{"version":3,"sources":["/Users/brennanpollock/Desktop/flashcard-project/Project_Flashcards_Qualified_1/src/components/Study.js"],"names":["React","useEffect","useState","useHistory","useParams","readDeck","Study","cards","setCards","deck","setDeck","front","setFront","cardIndex","setCardIndex","deckId","history","loadData","data","error","console","log","flip","next","length","result","window","confirm","push","name","back"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport {readDeck} from \"../utils/api/index\";\n\nfunction Study() {\n    const [cards, setCards] = useState({});\n    const [deck, setDeck] = useState({});\n    const [front, setFront] = useState(true);\n    const [cardIndex, setCardIndex] = useState(0);\n    const {deckId} = useParams();\n    const history = useHistory();\n\n\n    // effect for reading deck by deckId\n    useEffect(() => {\n            setCards({});\n            async function loadData() {\n                try {\n                    const data = await readDeck(deckId);\n                    setDeck(data)\n                    setCards(data.cards)\n                    }\n                catch(error) { \n                    console.log(error) \n                }\n            }\n        loadData();\n    },[deckId])\n\n    function flip() {\n        setFront(!front);\n    }\n\n    function next() {\n        if(cardIndex + 1 < cards.length){\n            setCardIndex(cardIndex + 1);\n            setFront(true);\n        } else {\n            const result = window.confirm(`Restart cards? Click 'cancel' to return to home page.`);\n        \n            if(result){\n                setCardIndex(0);\n                setFront(true);\n            } else {\n                history.push(\"/\");\n            }\n        }\n    }\n\n\n    if(cards.length > 2) {\n        return (\n            <div>\n                <h2>Study: {deck.name}</h2>\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <h4 className=\"card-title\">Card {cardIndex + 1} of {cards.length}</h4>\n                        <p className=\"card-text\">{front ? `${cards[cardIndex].front}` : `${cards[cardIndex].back}`}</p>\n                        <button onClick={flip}>Flip</button>\n                        {front ? null : <button onClick={next}>Next</button>}\n                    </div>\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div>\n                <h2>Study: {deck.name}</h2>\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <h4 className=\"card-title\">Not Enough Cards</h4>\n                        <p className=\"card-text\">You need at least 3 cards to study. There are {cards.length} cards in this deck. </p>\n                        <Link to={`/decks/${deckId}/cards/new`} className=\"btm btn-primary\">Add Cards</Link>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n\n\n\n} // end of study component\n\nexport default Study;"]},"metadata":{},"sourceType":"module"}