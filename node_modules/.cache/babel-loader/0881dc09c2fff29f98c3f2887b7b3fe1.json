{"ast":null,"code":"var _jsxFileName = \"/Users/brennanpollock/Desktop/flashcard-project/Project_Flashcards_Qualified_1/src/components/DeckInfo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { readDeck } from \"../utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeckInfo() {\n  _s();\n\n  const [cards, setCards] = useState([]);\n  const [deck, setDeck] = useState({});\n  const {\n    deckId\n  } = useParams();\n  useEffect(() => {\n    async function loadData() {\n      try {\n        const data = await readDeck(deckId);\n        setDeck(data);\n        setCards(data.cards);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    loadData();\n  }, [deckId]);\n\n  function BreadCrumb() {\n    return /*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"breadcrumb\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 65\n          }, this)\n        }, \"0\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item active\",\n          \"aria-current\": \"page\",\n          children: deck.name\n        }, \"2\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(BreadCrumb, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: deck.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: deck.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"#\",\n      className: \"btn btn-primary\",\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"#\",\n      className: \"btn btn-primary\",\n      children: \"Study\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"#\",\n      className: \"btn btn-primary\",\n      children: \"Add Cards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"#\",\n      className: \"btn btn-primary\",\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), cards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text col-3\",\n        children: card.front\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text col-6\",\n        children: card.back\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"#\",\n        className: \"btn btn-primary\",\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"#\",\n        className: \"btn btn-primary\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)]\n    }, card.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DeckInfo, \"y+yPuHOUABJwrPLN1h0MOApyMjY=\", false, function () {\n  return [useParams];\n});\n\n_c = DeckInfo;\nexport default DeckInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckInfo\");","map":{"version":3,"sources":["/Users/brennanpollock/Desktop/flashcard-project/Project_Flashcards_Qualified_1/src/components/DeckInfo.js"],"names":["React","useState","useEffect","useParams","Link","readDeck","DeckInfo","cards","setCards","deck","setDeck","deckId","loadData","data","error","console","log","BreadCrumb","name","description","map","card","front","back","id"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport {readDeck} from \"../utils/api/index\";\n\n\nfunction DeckInfo(){\n    const [cards, setCards] = useState([]);\n    const [deck, setDeck] = useState({});\n    const {deckId} = useParams();\n\n    useEffect(() => {\n            async function loadData() {\n                try {\n                    const data = await readDeck(deckId);\n                    setDeck(data)\n                    setCards(data.cards)\n                    }\n                catch(error) { \n                    console.log(error) \n                }\n            }\n        loadData();\n    },[deckId])\n\n     function BreadCrumb() {\n            return (\n                <nav aria-label=\"breadcrumb\">\n                    <ol className=\"breadcrumb\">\n                        <li className=\"breadcrumb-item\" key=\"0\"><Link to=\"/\">Home</Link></li>\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\" key=\"2\">{deck.name}</li>\n                    </ol>\n                </nav>\n            )\n        }\n\n    return (\n\n        <div>\n            <BreadCrumb/>\n            <h2>{deck.name}</h2>\n            <p>{deck.description}</p>\n            <Link to=\"#\" className=\"btn btn-primary\">Edit</Link>\n            <Link to=\"#\" className=\"btn btn-primary\">Study</Link>\n            <Link to=\"#\" className=\"btn btn-primary\">Add Cards</Link>\n            <Link to=\"#\" className=\"btn btn-primary\">Delete</Link>\n            <br/>\n            <br/>\n            <h2>Cards</h2>\n            {cards.map((card) => (\n                <div className=\"card\" key={card.id}>\n                    <p className=\"card-text col-3\">{card.front}</p>\n                    <p className=\"card-text col-6\">{card.back}</p>\n                    <Link to=\"#\" className=\"btn btn-primary\">Edit</Link>\n                    <Link to=\"#\" className=\"btn btn-primary\">Delete</Link>\n                </div>\n            ))}\n        </div>\n    )\n\n\n\n}\n\nexport default DeckInfo;"]},"metadata":{},"sourceType":"module"}