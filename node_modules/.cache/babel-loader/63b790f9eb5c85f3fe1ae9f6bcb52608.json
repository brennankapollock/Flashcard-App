{"ast":null,"code":"var _jsxFileName = \"/Users/brennanpollock/Desktop/flashcard-project/Project_Flashcards_Qualified_1/src/components/CardEdit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { readCard, readDeck, updateCard } from \"../utils/api\";\nimport CardForm from \"../components/Forms/CardForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CardEdit() {\n  _s();\n\n  const {\n    deckId,\n    cardId\n  } = useParams();\n  const [card, setCard] = useState({});\n  const [deck, setDeck] = useState({});\n  const history = useHistory();\n  useEffect(() => {\n    const loadDeck = async () => setDeck(await readDeck(deckId));\n\n    loadDeck();\n\n    const loadCard = async () => setCard(await readCard(cardId));\n\n    loadCard();\n  }, [deckId, cardId]);\n\n  const handleChange = ({\n    target\n  }) => {\n    setCard({ ...card,\n      [target.name]: target.value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    async function updateCardData() {\n      try {\n        await updateCard(card);\n        history.push(`/decks/${deckId}`);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    updateCardData();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CardForm, {\n      formData: card,\n      handleChange: handleChange,\n      handleSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CardEdit, \"5xeBs3kwM5T8dqWRLeyhBAHVEQg=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = CardEdit;\nexport default CardEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardEdit\");","map":{"version":3,"sources":["/Users/brennanpollock/Desktop/flashcard-project/Project_Flashcards_Qualified_1/src/components/CardEdit.js"],"names":["React","useEffect","useState","useHistory","useParams","readCard","readDeck","updateCard","CardForm","CardEdit","deckId","cardId","card","setCard","deck","setDeck","history","loadDeck","loadCard","handleChange","target","name","value","handleSubmit","event","preventDefault","updateCardData","push","error","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;AACA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,UAA7B,QAA+C,cAA/C;AACA,OAAOC,QAAP,MAAqB,8BAArB;;;AAGA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAM;AAACC,IAAAA,MAAD;AAASC,IAAAA;AAAT,MAAmBP,SAAS,EAAlC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMc,OAAO,GAAGb,UAAU,EAA1B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMgB,QAAQ,GAAG,YAAWF,OAAO,CAAC,MAAMT,QAAQ,CAACI,MAAD,CAAf,CAAnC;;AACAO,IAAAA,QAAQ;;AACR,UAAMC,QAAQ,GAAG,YAAWL,OAAO,CAAC,MAAMR,QAAQ,CAACM,MAAD,CAAf,CAAnC;;AACAO,IAAAA,QAAQ;AACX,GALQ,EAKN,CAACR,MAAD,EAASC,MAAT,CALM,CAAT;;AAOA,QAAMQ,YAAY,GAAG,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAc;AAC/BP,IAAAA,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAAU,OAACQ,MAAM,CAACC,IAAR,GAAeD,MAAM,CAACE;AAAhC,KAAD,CAAP;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACC,cAAN;;AACA,mBAAeC,cAAf,GAAgC;AAC5B,UAAG;AACC,cAAMnB,UAAU,CAACK,IAAD,CAAhB;AACAI,QAAAA,OAAO,CAACW,IAAR,CAAc,UAASjB,MAAO,EAA9B;AACH,OAHD,CAIA,OAAOkB,KAAP,EAAa;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ;;AACDF,IAAAA,cAAc;AACjB,GAZD;;AAgBA,sBACI;AAAA,2BACI,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEd,IAApB;AAA0B,MAAA,YAAY,EAAEO,YAAxC;AAAsD,MAAA,YAAY,EAAEI;AAApE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAvCQd,Q;UACoBL,S,EAGTD,U;;;KAJXM,Q;AAyCT,eAAeA,QAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { readCard, readDeck, updateCard } from \"../utils/api\";\nimport CardForm from \"../components/Forms/CardForm\";\n\n\nfunction CardEdit() {\n    const {deckId, cardId} = useParams();\n    const [card, setCard] = useState({});\n    const [deck, setDeck] = useState({});\n    const history = useHistory();\n\n    useEffect(() => {\n        const loadDeck = async() => setDeck(await readDeck(deckId));\n        loadDeck();\n        const loadCard = async() => setCard(await readCard(cardId));\n        loadCard();\n    }, [deckId, cardId])\n\n    const handleChange = ({target}) => {\n        setCard({...card, [target.name]: target.value})\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        async function updateCardData() {\n            try{\n                await updateCard(card);\n                history.push(`/decks/${deckId}`)\n            }\n            catch (error){\n                console.log(error)\n            }\n        }\n        updateCardData();\n    }\n\n\n\n    return (\n        <div>\n            <CardForm formData={card} handleChange={handleChange} handleSubmit={handleSubmit}/>\n        </div>\n    )\n\n}\n\nexport default CardEdit;"]},"metadata":{},"sourceType":"module"}