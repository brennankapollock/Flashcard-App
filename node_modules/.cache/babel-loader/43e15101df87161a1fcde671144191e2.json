{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { readCard, readDeck } from \"../utils/api\";\n\nfunction CardEdit() {\n  _s();\n\n  const {\n    deckId,\n    cardId\n  } = useParams();\n  const [card, setCard] = useState({});\n  const [deck, setDeck] = useState({});\n  useEffect(() => {\n    const loadDeck = async () => setDeck(await readDeck(deckId));\n\n    loadDeck();\n\n    const loadCard = async () => setCard(await readCard(cardId));\n\n    loadDeck();\n  }, [deckId, cardId]);\n}\n\n_s(CardEdit, \"80aFd+i0wf4DnawSfwd+FXkD7x8=\", false, function () {\n  return [useParams];\n});\n\n_c = CardEdit;\nexport default CardEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardEdit\");","map":{"version":3,"sources":["/Users/brennanpollock/Desktop/flashcard-project/Project_Flashcards_Qualified_1/src/components/CardEdit.js"],"names":["React","useEffect","useState","useParams","readCard","readDeck","CardEdit","deckId","cardId","card","setCard","deck","setDeck","loadDeck","loadCard"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,cAAnC;;AAGA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAM;AAACC,IAAAA,MAAD;AAASC,IAAAA;AAAT,MAAmBL,SAAS,EAAlC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMY,QAAQ,GAAG,YAAWD,OAAO,CAAC,MAAMP,QAAQ,CAACE,MAAD,CAAf,CAAnC;;AACAM,IAAAA,QAAQ;;AACR,UAAMC,QAAQ,GAAG,YAAWJ,OAAO,CAAC,MAAMN,QAAQ,CAACI,MAAD,CAAf,CAAnC;;AACAK,IAAAA,QAAQ;AACX,GALQ,EAKN,CAACN,MAAD,EAASC,MAAT,CALM,CAAT;AASH;;GAdQF,Q;UACoBH,S;;;KADpBG,Q;AAgBT,eAAeA,QAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { readCard, readDeck } from \"../utils/api\";\n\n\nfunction CardEdit() {\n    const {deckId, cardId} = useParams();\n    const [card, setCard] = useState({});\n    const [deck, setDeck] = useState({});\n\n    useEffect(() => {\n        const loadDeck = async() => setDeck(await readDeck(deckId));\n        loadDeck();\n        const loadCard = async() => setCard(await readCard(cardId));\n        loadDeck();\n    }, [deckId, cardId])\n\n\n\n}\n\nexport default CardEdit;"]},"metadata":{},"sourceType":"module"}