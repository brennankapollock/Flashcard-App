{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { readDeck } from \"../utils/api/index\";\n\nfunction Study() {\n  _s();\n\n  const [cards, setCards] = useState({});\n  const [deck, setDeck] = useState();\n  const {\n    deckId\n  } = useParams(); //use readDeck from utils\n\n  useEffect(() => {\n    async function loadData() {\n      try {\n        const data = await readDeck(deckId);\n        setDeck(data);\n        setCards(data.cards);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    loadData();\n  }, [deckId]);\n}\n\n_s(Study, \"LKEBQAFbBRGMtkoIcC1Lo4v9iiU=\", false, function () {\n  return [useParams];\n});\n\n_c = Study;\nexport default Study;\n\nvar _c;\n\n$RefreshReg$(_c, \"Study\");","map":{"version":3,"sources":["/Users/brennanpollock/Desktop/flashcard-project/Project_Flashcards_Qualified_1/src/components/Study.js"],"names":["React","useEffect","useState","useParams","readDeck","Study","cards","setCards","deck","setDeck","deckId","loadData","data","error","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAAQC,QAAR,QAAuB,oBAAvB;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,EAAhC;AACA,QAAM;AAACQ,IAAAA;AAAD,MAAWP,SAAS,EAA1B,CAHa,CAIb;;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACR,mBAAeU,QAAf,GAA0B;AACtB,UAAI;AACA,cAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACM,MAAD,CAA3B;AACAD,QAAAA,OAAO,CAACG,IAAD,CAAP;AACAL,QAAAA,QAAQ,CAACK,IAAI,CAACN,KAAN,CAAR;AACC,OAJL,CAKA,OAAMO,KAAN,EAAa;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ;;AACLF,IAAAA,QAAQ;AACX,GAZQ,EAYP,CAACD,MAAD,CAZO,CAAT;AAkBH;;GAxBQL,K;UAGYF,S;;;KAHZE,K;AA0BT,eAAeA,KAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { useParams } from \"react-router\";\nimport {readDeck} from \"../utils/api/index\";\n\nfunction Study() {\n    const [cards, setCards] = useState({});\n    const [deck, setDeck] = useState();\n    const {deckId} = useParams();\n    //use readDeck from utils\n\n    useEffect(() => {\n            async function loadData() {\n                try {\n                    const data = await readDeck(deckId);\n                    setDeck(data)\n                    setCards(data.cards)\n                    }\n                catch(error) { \n                    console.log(error) \n                }\n            }\n        loadData();\n    },[deckId])\n\n\n\n\n\n}\n\nexport default Study;"]},"metadata":{},"sourceType":"module"}