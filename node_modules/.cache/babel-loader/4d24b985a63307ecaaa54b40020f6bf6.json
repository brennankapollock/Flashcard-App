{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { listDecks } from \"../utils/api/index\";\n\nasync function DecksDisplay() {\n  _s();\n\n  const [decks, setDecks] = useState([]);\n  useEffect(() => {\n    async function loadData() {\n      try {\n        const data = await listDecks();\n        setDecks(data);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          console.log(\"Aborted\");\n        } else {\n          throw error;\n        }\n      }\n    }\n\n    loadData();\n  }, []);\n}\n\n_s(DecksDisplay, \"f+alwG6Mds7XNzaPIkXWhs/xDB4=\");\n\n_c = DecksDisplay;\nexport default DecksDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"DecksDisplay\");","map":{"version":3,"sources":["/Users/brennanpollock/Desktop/flashcard-project/Project_Flashcards_Qualified_1/src/components/Decks.js"],"names":["React","useState","useEffect","listDecks","DecksDisplay","decks","setDecks","loadData","data","error","name","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,SAAR,QAAwB,oBAAxB;;AAGA,eAAeC,YAAf,GAA8B;AAAA;;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeK,QAAf,GAA0B;AACtB,UAAI;AACA,cAAMC,IAAI,GAAG,MAAML,SAAS,EAA5B;AACAG,QAAAA,QAAQ,CAACE,IAAD,CAAR;AACH,OAHD,CAIA,OAAOC,KAAP,EAAc;AACV,YAAIA,KAAK,CAACC,IAAN,KAAe,YAAnB,EAAiC;AAC7BC,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,SAFD,MAGK;AACD,gBAAMH,KAAN;AACH;AACJ;AACJ;;AACDF,IAAAA,QAAQ;AACX,GAhBQ,EAgBN,EAhBM,CAAT;AAkBH;;GApBcH,Y;;KAAAA,Y;AAyBf,eAAeA,YAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport {listDecks} from \"../utils/api/index\";\n\n\nasync function DecksDisplay() {\n    const [decks, setDecks] = useState([])\n    useEffect(() => {\n        async function loadData() {\n            try {\n                const data = await listDecks();\n                setDecks(data);\n            }\n            catch (error) {\n                if (error.name === \"AbortError\") {\n                    console.log(\"Aborted\");\n                }\n                else {\n                    throw error;\n                }\n            }\n        }\n        loadData();\n    }, []);\n\n}\n\n\n\n\nexport default DecksDisplay;\n\n"]},"metadata":{},"sourceType":"module"}