{"ast":null,"code":"var _jsxFileName = \"/Users/brennanpollock/Desktop/flashcard-project/Project_Flashcards_Qualified_1/src/components/Decks.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { listDecks } from \"../utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DecksDisplay() {\n  _s();\n\n  const [decks, setDecks] = useState([]);\n  useEffect(() => {\n    async function loadData() {\n      try {\n        const data = await listDecks();\n        setDecks(data);\n      } // end of try\n      catch (error) {\n        console.log(error);\n      } // end of catch\n\n    } // end of loadData()\n\n\n    loadData();\n  }, []); //end of effect\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: decks.map((key, deck) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: deck.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: deck.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Study\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n} //end of DecksDisplay()\n\n\n_s(DecksDisplay, \"f+alwG6Mds7XNzaPIkXWhs/xDB4=\");\n\n_c = DecksDisplay;\nexport default DecksDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"DecksDisplay\");","map":{"version":3,"sources":["/Users/brennanpollock/Desktop/flashcard-project/Project_Flashcards_Qualified_1/src/components/Decks.js"],"names":["React","useState","useEffect","listDecks","DecksDisplay","decks","setDecks","loadData","data","error","console","log","map","key","deck","name","description"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,SAAR,QAAwB,oBAAxB;;;AAIA,SAASC,YAAT,GAAwB;AAAA;;AACpB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeK,QAAf,GAA0B;AACtB,UAAI;AACA,cAAMC,IAAI,GAAG,MAAML,SAAS,EAA5B;AACAG,QAAAA,QAAQ,CAACE,IAAD,CAAR;AACH,OAHD,CAGC;AACD,aAAMC,KAAN,EAAa;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OAPqB,CAOrB;;AACJ,KATW,CASV;;;AACFF,IAAAA,QAAQ;AACX,GAXQ,EAWP,EAXO,CAAT,CAHoB,CAcd;;AAEN,sBACI;AAAA,cACKF,KAAK,CAACO,GAAN,CAAU,CAACC,GAAD,EAAMC,IAAN,kBACP;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,oBAA4BA,IAAI,CAACC;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAG,UAAA,SAAS,EAAC,WAAb;AAAA,oBAA0BD,IAAI,CAACE;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,C,CAAC;;;GAhCOZ,Y;;KAAAA,Y;AAmCT,eAAeA,YAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport {listDecks} from \"../utils/api/index\";\n\n\n\nfunction DecksDisplay() {\n    const [decks, setDecks] = useState([]);\n    \n    useEffect(() => {\n        async function loadData() {\n            try {\n                const data = await listDecks();\n                setDecks(data);\n            }// end of try\n            catch(error) {\n                console.log(error)\n            }// end of catch\n        } // end of loadData()\n        loadData();\n    },[]) //end of effect\n\n    return (\n        <div>\n            {decks.map((key, deck) => (\n                <div className=\"card\">\n                    <div className=\"card-body\"> \n                        <h5 className=\"card-title\">{deck.name}</h5>\n                        <p className=\"card-text\">{deck.description}</p>\n                        <button>View</button>\n                        <button>Study</button>\n                        <button>Delete</button>\n                    </div>\n                </div>\n            ))}\n        </div>\n    )\n \n} //end of DecksDisplay()\n\n\nexport default DecksDisplay;\n\n"]},"metadata":{},"sourceType":"module"}