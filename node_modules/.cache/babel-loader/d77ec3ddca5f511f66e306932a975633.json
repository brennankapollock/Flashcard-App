{"ast":null,"code":"var _jsxFileName = \"/Users/brennanpollock/Desktop/flashcard-project/Project_Flashcards_Qualified_1/src/components/DeckEdit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { readDeck } from \"../utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeckEdit() {\n  _s();\n\n  const initialState = {\n    name: \"\",\n    description: \"\"\n  };\n  const [deck, setDeck] = useState({ ...initialState\n  });\n  const {\n    deckId\n  } = useParams();\n  useEffect(() => {\n    async function loadData() {\n      try {\n        const data = await readDeck(deckId);\n        setDeck(data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    loadData();\n  }, [deckId]);\n\n  function BreadCrumb() {\n    return /*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"breadcrumb\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 61\n          }, this)\n        }, \"0\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/decks/${deckId}`,\n            children: deck.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 62\n          }, this)\n        }, \"1\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item active\",\n          \"aria-current\": \"page\",\n          children: \"Edit\"\n        }, \"2\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(BreadCrumb, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          value: deck.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: [\"Description\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          name: \"description\",\n          value: \"description\",\n          children: deck.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"btn btn-primary\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 6\n  }, this);\n}\n\n_s(DeckEdit, \"270bgxIa72NnBZBOyscycGzxtGw=\", false, function () {\n  return [useParams];\n});\n\n_c = DeckEdit;\nexport default DeckEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckEdit\");","map":{"version":3,"sources":["/Users/brennanpollock/Desktop/flashcard-project/Project_Flashcards_Qualified_1/src/components/DeckEdit.js"],"names":["React","useState","useEffect","useParams","Link","readDeck","DeckEdit","initialState","name","description","deck","setDeck","deckId","loadData","data","error","console","log","BreadCrumb"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport {readDeck} from \"../utils/api/index\";\n\n\nfunction DeckEdit() {\n    const initialState = { name: \"\", description: \"\" };\n    const [deck, setDeck] = useState({...initialState});\n    const {deckId} = useParams();\n    \n\n   useEffect(() => {\n            \n            async function loadData() {\n                try {\n                    const data = await readDeck(deckId);\n                    setDeck(data)\n                    }\n                catch(error) { \n                    console.log(error) \n                }\n            }\n        loadData();\n    },[deckId])    \n\n\n    function BreadCrumb() {\n        return (\n            <nav aria-label=\"breadcrumb\">\n                <ol className=\"breadcrumb\">\n                    <li className=\"breadcrumb-item\" key=\"0\"><Link to=\"/\">Home</Link></li>\n                    <li className=\"breadcrumb-item\" key =\"1\"><Link to={`/decks/${deckId}`}>{deck.name}</Link></li>\n                    <li className=\"breadcrumb-item active\" aria-current=\"page\" key=\"2\">Edit</li>\n                </ol>\n            </nav>\n        )\n    }\n\n\n return (\n     <div>\n        <BreadCrumb/>\n        <h2>Edit Deck</h2>\n            <form>\n                <label htmlFor=\"name\">\n                        Name\n                        <br/>\n                    <input type=\"text\" id=\"name\" name=\"name\" value={deck.name}></input>\n                </label>\n                <br/>\n                <label htmlFor=\"description\">\n                        Description\n                        <br/>\n                    <textarea id=\"description\" name=\"description\" value=\"description\">{deck.description}</textarea>\n                </label>\n                <br/>\n                <Link to=\"/\" className=\"btn btn-primary\">Cancel</Link>\n                <button className=\"btn btn-primary\">Submit</button>\n            </form>\n        </div>\n\n )\n\n}\n\nexport default DeckEdit;"]},"metadata":{},"sourceType":"module"}