{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\n\nfunction DeckEdit() {\n  _s();\n\n  const initialState = {\n    name: \"\",\n    description: \"\"\n  };\n  const [deck, setDeck] = useState({ ...initialState\n  });\n  const {\n    deckId\n  } = useParams();\n  useEffect(() => {\n    async function loadData() {\n      try {\n        const data = await readDeck(deckId);\n        setDeck(data);\n        setCards(data.cards);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    loadData();\n  }, [deckId]);\n}\n\n_s(DeckEdit, \"270bgxIa72NnBZBOyscycGzxtGw=\", false, function () {\n  return [useParams];\n});\n\n_c = DeckEdit;\nexport default DeckEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckEdit\");","map":{"version":3,"sources":["/Users/brennanpollock/Desktop/flashcard-project/Project_Flashcards_Qualified_1/src/components/DeckEdit.js"],"names":["React","useState","useEffect","useParams","DeckEdit","initialState","name","description","deck","setDeck","deckId","loadData","data","readDeck","setCards","cards","error","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,SAAT,QAA0B,cAA1B;;AAGA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAMC,YAAY,GAAG;AAAEC,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,WAAW,EAAE;AAAzB,GAArB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAC,GAAGI;AAAJ,GAAD,CAAhC;AACA,QAAM;AAACK,IAAAA;AAAD,MAAWP,SAAS,EAA1B;AAGDD,EAAAA,SAAS,CAAC,MAAM;AAEP,mBAAeS,QAAf,GAA0B;AACtB,UAAI;AACA,cAAMC,IAAI,GAAG,MAAMC,QAAQ,CAACH,MAAD,CAA3B;AACAD,QAAAA,OAAO,CAACG,IAAD,CAAP;AACAE,QAAAA,QAAQ,CAACF,IAAI,CAACG,KAAN,CAAR;AACC,OAJL,CAKA,OAAMC,KAAN,EAAa;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ;;AACLL,IAAAA,QAAQ;AACX,GAbO,EAaN,CAACD,MAAD,CAbM,CAAT;AAeF;;GArBQN,Q;UAGYD,S;;;KAHZC,Q;AAuBT,eAAeA,QAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport { useParams } from \"react-router\";\n\n\nfunction DeckEdit() {\n    const initialState = { name: \"\", description: \"\" };\n    const [deck, setDeck] = useState({...initialState});\n    const {deckId} = useParams();\n    \n\n   useEffect(() => {\n            \n            async function loadData() {\n                try {\n                    const data = await readDeck(deckId);\n                    setDeck(data)\n                    setCards(data.cards)\n                    }\n                catch(error) { \n                    console.log(error) \n                }\n            }\n        loadData();\n    },[deckId])    \n\n}\n\nexport default DeckEdit;"]},"metadata":{},"sourceType":"module"}