{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { readDeck } from \"../utils/api/index\";\n\nfunction NewCard() {\n  _s();\n\n  const initialState = {\n    front: \"\",\n    back: \"\"\n  };\n  const [deck, setDeck] = useState({\n    initialState\n  });\n  const {\n    deckId\n  } = useParams();\n  useEffect(() => {\n    async function loadData() {\n      try {\n        const data = await readDeck(deckId);\n        setDeck(data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    loadData();\n  }, [deckId]);\n}\n\n_s(NewCard, \"vSlQR8aT/wQ3SATooYSV9P8AqP4=\", false, function () {\n  return [useParams];\n});\n\n_c = NewCard;\nexport default NewCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewCard\");","map":{"version":3,"sources":["/Users/brennanpollock/Desktop/flashcard-project/Project_Flashcards_Qualified_1/src/components/NewCard.js"],"names":["React","useEffect","useState","useParams","readDeck","NewCard","initialState","front","back","deck","setDeck","deckId","loadData","data","error","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAAQC,QAAR,QAAuB,oBAAvB;;AAEA,SAASC,OAAT,GAAkB;AAAA;;AACd,QAAMC,YAAY,GAAG;AAACC,IAAAA,KAAK,EAAE,EAAR;AAAYC,IAAAA,IAAI,EAAE;AAAlB,GAArB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC;AAACI,IAAAA;AAAD,GAAD,CAAhC;AACA,QAAM;AAACK,IAAAA;AAAD,MAAWR,SAAS,EAA1B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeW,QAAf,GAA0B;AACtB,UAAI;AACA,cAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACO,MAAD,CAA3B;AACAD,QAAAA,OAAO,CAACG,IAAD,CAAP;AACH,OAHD,CAIA,OAAMC,KAAN,EAAa;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ;;AACDF,IAAAA,QAAQ;AACX,GAXQ,EAWP,CAACD,MAAD,CAXO,CAAT;AAaH;;GAlBQN,O;UAGYF,S;;;KAHZE,O;AAoBT,eAAeA,OAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport {readDeck} from \"../utils/api/index\";\n\nfunction NewCard(){\n    const initialState = {front: \"\", back: \"\"}\n    const [deck, setDeck] = useState({initialState});\n    const {deckId} = useParams();\n\n    useEffect(() => {\n        async function loadData() {\n            try {\n                const data = await readDeck(deckId);\n                setDeck(data)\n            }\n            catch(error) {\n                console.log(error)\n            }\n        } \n        loadData();\n    },[deckId])\n\n}\n\nexport default NewCard;"]},"metadata":{},"sourceType":"module"}