{"ast":null,"code":"var _jsxFileName = \"/Users/brennanpollock/Desktop/flashcard-project/Project_Flashcards_Qualified_1/src/components/DecksDisplay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteDeck, listDecks } from \"../utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DecksDisplay() {\n  _s();\n\n  const [decks, setDecks] = useState([]);\n  useEffect(() => {\n    async function loadData() {\n      try {\n        const data = await listDecks();\n        setDecks(data);\n      } // end of try\n      catch (error) {\n        console.log(error);\n      } // end of catch\n\n    } // end of loadData()\n\n\n    loadData();\n  }, []); //end of effect\n\n  const handleDelete = ({\n    target\n  }) => {\n    const message = window.confirm(`Delete this deck? You will not be able to recover it.`);\n\n    if (message) {\n      async function deleteData() {\n        try {\n          await deleteDeck(target.value);\n          const data = await listDecks();\n          setDecks(data);\n        } catch (error) {\n          console.log(error);\n        }\n      }\n\n      deleteData();\n    }\n  };\n\n  if (decks.length > 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: decks.map(deck => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title col-9\",\n              children: deck.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"col-3\",\n              children: [deck.cards.length, \" Cards\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: deck.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/decks/${deck.id}`,\n            className: \"btn btn-primary\",\n            children: \"View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/decks/${deck.id}/study`,\n            className: \"btn btn-primary\",\n            children: \"Study\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            value: deck.id,\n            onClick: handleDelete,\n            className: \"btn btn-primary\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)\n      }, deck.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n\n  return \"Please add a deck\";\n}\n\n_s(DecksDisplay, \"f+alwG6Mds7XNzaPIkXWhs/xDB4=\");\n\n_c = DecksDisplay;\nexport default DecksDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"DecksDisplay\");","map":{"version":3,"sources":["/Users/brennanpollock/Desktop/flashcard-project/Project_Flashcards_Qualified_1/src/components/DecksDisplay.js"],"names":["React","useEffect","useState","Link","deleteDeck","listDecks","DecksDisplay","decks","setDecks","loadData","data","error","console","log","handleDelete","target","message","window","confirm","deleteData","value","length","map","deck","name","cards","description","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,UAAR,EAAoBC,SAApB,QAAoC,oBAApC;;;AAKA,SAASC,YAAT,GAAwB;AAAA;;AAEnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AAEDD,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeQ,QAAf,GAA0B;AACtB,UAAI;AACA,cAAMC,IAAI,GAAG,MAAML,SAAS,EAA5B;AACAG,QAAAA,QAAQ,CAACE,IAAD,CAAR;AACH,OAHD,CAGC;AACD,aAAMC,KAAN,EAAa;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OAPqB,CAOrB;;AACJ,KATW,CASV;;;AACFF,IAAAA,QAAQ;AACX,GAXQ,EAWP,EAXO,CAAT,CAJoB,CAed;;AAGN,QAAMK,YAAY,GAAG,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAc;AAC/B,UAAMC,OAAO,GAAGC,MAAM,CAACC,OAAP,CAAgB,uDAAhB,CAAhB;;AACA,QAAGF,OAAH,EAAW;AACH,qBAAeG,UAAf,GAA4B;AACxB,YAAI;AACA,gBAAMf,UAAU,CAACW,MAAM,CAACK,KAAR,CAAhB;AACA,gBAAMV,IAAI,GAAG,MAAML,SAAS,EAA5B;AACAG,UAAAA,QAAQ,CAACE,IAAD,CAAR;AACP,SAJG,CAIF,OAAOC,KAAP,EAAc;AACZC,UAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ;;AACDQ,MAAAA,UAAU;AACb;AACJ,GAdD;;AAgBA,MAAGZ,KAAK,CAACc,MAAN,GAAe,CAAlB,EAAqB;AACjB,wBACI;AAAA,gBACKd,KAAK,CAACe,GAAN,CAAWC,IAAD,iBACP;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,oCACI;AAAI,cAAA,SAAS,EAAC,kBAAd;AAAA,wBAAkCA,IAAI,CAACC;AAAvC;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAG,cAAA,SAAS,EAAC,OAAb;AAAA,yBAAsBD,IAAI,CAACE,KAAL,CAAWJ,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI;AAAG,YAAA,SAAS,EAAC,WAAb;AAAA,sBAA0BE,IAAI,CAACG;AAA/B;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,UAASH,IAAI,CAACI,EAAG,EAA5B;AAA+B,YAAA,SAAS,EAAC,iBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ,eAOI,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,UAASJ,IAAI,CAACI,EAAG,QAA5B;AAAqC,YAAA,SAAS,EAAC,iBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAQI;AAAQ,YAAA,KAAK,EAAEJ,IAAI,CAACI,EAApB;AAAwB,YAAA,OAAO,EAAEb,YAAjC;AAA+C,YAAA,SAAS,EAAC,iBAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,SAA2BS,IAAI,CAACI,EAAhC;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAkBH;;AACD,SAAO,mBAAP;AAEH;;GAxDQrB,Y;;KAAAA,Y;AA2DT,eAAeA,YAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {deleteDeck, listDecks} from \"../utils/api/index\";\n\n\n\n\nfunction DecksDisplay() {\n\n     const [decks, setDecks] = useState([]);\n    \n    useEffect(() => {\n        async function loadData() {\n            try {\n                const data = await listDecks();\n                setDecks(data);\n            }// end of try\n            catch(error) {\n                console.log(error)\n            }// end of catch\n        } // end of loadData()\n        loadData();\n    },[]) //end of effect\n\n\n    const handleDelete = ({target}) => {\n        const message = window.confirm(`Delete this deck? You will not be able to recover it.`)\n        if(message){\n                async function deleteData() {\n                    try {\n                        await deleteDeck(target.value)\n                        const data = await listDecks()\n                        setDecks(data);\n                } catch (error) {\n                    console.log(error);\n                }\n            }\n            deleteData();\n        }\n    }\n\n    if(decks.length > 0) {\n        return (\n            <div>\n                {decks.map((deck) => (\n                    <div className=\"card\" key={deck.id}>\n                        <div className=\"card-body\">\n                            <div className=\"row\">\n                                <h5 className=\"card-title col-9\">{deck.name}</h5>\n                                <p className=\"col-3\">{deck.cards.length} Cards</p>\n                            </div>\n                            <p className=\"card-text\">{deck.description}</p>\n                            <Link to={`/decks/${deck.id}`} className=\"btn btn-primary\">View</Link>\n                            <Link to={`/decks/${deck.id}/study`} className=\"btn btn-primary\">Study</Link>\n                            <button value={deck.id} onClick={handleDelete} className=\"btn btn-primary\">Delete</button>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        )\n    } \n    return(\"Please add a deck\")\n \n} \n\n\nexport default DecksDisplay;\n\n"]},"metadata":{},"sourceType":"module"}